[{"id":"b47329d7.3fb728","type":"inject","z":"ed6be398.cbe5b","name":"","topic":"","payload":"{ \"timestamp\": \"2017-06-06T12:50:52.351Z\",\"macAddr\": \"000000000c500078\", \"lat\":\"-37.816950\",\"lng\":\"144.958762\",\"battery\":40}","payloadType":"str","repeat":"","crontab":"","once":false,"x":510,"y":640,"wires":[["62f67c3f.e45894"]]},{"id":"62f67c3f.e45894","type":"mqtt out","z":"ed6be398.cbe5b","name":"","topic":"GPS","qos":"","retain":"","broker":"835c32af.1a1fa","x":759,"y":587,"wires":[]},{"id":"fae53c99.10b33","type":"mqtt in","z":"ed6be398.cbe5b","name":"","topic":"GPS","qos":"0","broker":"835c32af.1a1fa","x":130,"y":140,"wires":[["d4af1936.06f768"]]},{"id":"cbcc258f.4a65f8","type":"websocket out","z":"ed6be398.cbe5b","name":"","server":"f4b42b0.6d1bfd8","client":"","x":835,"y":403,"wires":[]},{"id":"e6180a51.acde98","type":"function","z":"ed6be398.cbe5b","name":"global context ","func":"// The received message is stored in 'msg'\n// It will have at least a 'payload' property:\n//   console.log(msg.payload);\n// The 'context' object is available to store state\n// between invocations of the function\n//   context = {};\ncontext.global.location = msg.payload;\n\nreturn msg;","outputs":1,"noerr":0,"x":621,"y":377,"wires":[["cbcc258f.4a65f8"]]},{"id":"862e08e3.0862f8","type":"websocket in","z":"ed6be398.cbe5b","name":"","server":"f4b42b0.6d1bfd8","client":"","x":314,"y":470,"wires":[["459ffa5a.816b94","16c2dad3.0da445"]]},{"id":"459ffa5a.816b94","type":"function","z":"ed6be398.cbe5b","name":"global context ","func":"// The received message is stored in 'msg'\n// It will have at least a 'payload' property:\n//   console.log(msg.payload);\n// The 'context' object is available to store state\n// between invocations of the function\n//   context = {};\n\nmsg.payload = context.global.location;\nreturn msg;","outputs":1,"noerr":0,"x":623,"y":443,"wires":[["cbcc258f.4a65f8"]]},{"id":"adeb49e8.6c7b38","type":"http response","z":"ed6be398.cbe5b","name":"","x":941,"y":699,"wires":[]},{"id":"7c4137d8.fe65b8","type":"http in","z":"ed6be398.cbe5b","name":"","url":"/map","method":"get","upload":false,"swaggerDoc":"","x":245,"y":699,"wires":[["c8ec219d.36dbe","f1a022ef.25df3"]]},{"id":"51c9aaf8.3996c4","type":"function","z":"ed6be398.cbe5b","name":"data simplify","func":"var time = msg.payload.timestamp;\nvar latitude = msg.payload.lat;\nvar longitude = msg.payload.lng;\nvar battery_val = msg.payload.battery;\n\n//msg.payload = {device_data :\"time: \" +time+ \", \" + \"ID tag: \" +ID_tag+ \", \" + \"Button: \"+ button_status+ \", \" +\"Battery status: \" + battery_val,GPS_Data:[{\"lat\":latitude_val,\"lng\":longitude_val}]};\nmsg.payload = {\"payload\":{\"time\": time,\"BatteryStatus\": battery_val,\"GPSData\" :{\"lat\":latitude,\"lng\":longitude}}};\n//msg.payload = {\"payload\":[{\"lat\":latitude_val,\"lng\":longitude_val}]};\n\nreturn msg.payload;\n\n\n","outputs":1,"noerr":0,"x":402.4000244140625,"y":291.1999816894531,"wires":[["e6180a51.acde98"]]},{"id":"4d90ed32.da8284","type":"debug","z":"ed6be398.cbe5b","name":"","active":true,"console":false,"complete":"payload","x":536,"y":174,"wires":[]},{"id":"c8ec219d.36dbe","type":"template","z":"ed6be398.cbe5b","name":"website-javascript","field":"payload","fieldType":"msg","format":"html","syntax":"mustache","template":"<!DOCTYPE html>\n<html>\n<head>\n  <title>GPS Trcaking</title>\n  <script type=\"text/javascript\" src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js\"></script>\n  <!--<script type=\"text/javascript\" src=\"https://maps.google.com/maps/api/js?sensor=true\"></script>\n  <script src=\"//maps.googleapis.com/maps/api/js?key=AIzaSyDM3VDgcwtn7Gi9wvAuxE-qSijTPgCOGro&sensor=true\" async=\"\" defer=\"defer\" type=\"text/javascript\"></script>-->\n  <script type=\"text/javascript\" src=\"https://maps.google.com/maps/api/js?key=AIzaSyDM3VDgcwtn7Gi9wvAuxE-qSijTPgCOGro&ampsensor=true\"></script>\n  <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/gmaps.js/0.4.24/gmaps.min.js\"></script>\n  \n  \n  <style type=\"text/css\" media=\"screen\">\n    #map {\n      position:absolute;\n      top: 0; bottom: 0; left: 0; right: 0;\n    }\n    \n    div1 {\n    background-color: lightgrey;\n    width: 50px;\n    border: 5px solid green;\n    padding: 5px;\n    margin: 5px;\n    }\n  #box{ \n  background-color: darkgreen;\n    height: 10%;\n    width: 5%;\n    left: 94%;\n    right: 20px;\n    bottom: 90%;\n    top: 20px;\n    position: absolute;\n  }\n  \n  #mytext{ \n    color: white;  \n    left: 94%;\n    right:20px;\n    top: 20px%;\n    bottom: 90%;\n    text-align: center;\n    vertical-align: middle;\n    position: absolute;\n    \n  }\n  \nbody {\n  padding: 20px;\n}\nbutton {\n  margin-top: 30px;\n  line-height: 60px;\n  font-weight: bold;\n  padding: 0 40px;\n  background: salmon;\n  border: none;\n  position: relative;\n}\nbutton:hover {\n  background: lightsalmon;\n}\n\nbody {\n  padding: 40px;\n}\nbutton2 {\n  margin-top: 60px;\n  line-height: 60px;\n  font-weight: bold;\n  padding: 0 40px;\n  background: green;\n  border: none;\n  position: relative;\n}\nbutton2:hover {\n  background: lightgreen;\n}\n \n</style>\n</head>\n<body>\n \n  <div id=\"map\"></div>\n  <div id=\"box\"></div>\n  <div id=\"mytext\"><b></b></div>\n  \n  <script type=\"text/javascript\">\n   var socketaddy = \"ws://\" + location.host + \"/ws/location\";\n   var map;\n   var sock;\n   $(document).ready(function(){\n        \n          map = new GMaps({\n          div: '#map',\n          zoom: 15,\n          center: {lat:-37.8181873,lng:144.9483124}, \n          mapTypeId: 'terrain'\n         });\n         \n         \n       //center: {lat:-37.912413,lng:144.738351},  //home \n       //center: {lat:-34.983306,lng:148.2261448},  //Farm area\n       //center: {lat:-37.8181873,lng:144.9483124},  //office\n       \n       \n      sock = new WebSocket(socketaddy);\n      sock.onopen = function(){ console.log(\"Connected websocket\");\n\t      console.log(\"Sending ping..\");\n\t      //sock.send(\"Ping!\");\n\t      console.log(\"Ping sent..\");\n      };\n      sock.onerror = function(){ console.log(\"Websocket error\"); };\n    \n//    \n        var button = document.createElement(\"button\");\n        button.innerHTML = \"Simulated GPS sensor\";\n        \n        // 2. Append somewhere\n        var body = document.getElementsByTagName(\"body\")[0];\n        body.appendChild(button);\n        \n        // 3. Add event handler\n        button.addEventListener (\"click\", function() {\n          getPolygonCoords();\n        });\n        \n        \n        var button2 = document.createElement(\"button\");\n        button2.innerHTML = \"Clear markers\";\n        \n        // 2. Append somewhere\n        var body = document.getElementsByTagName(\"body\")[0];\n        body.appendChild(button2);\n        \n       \n\n\n// Boundary ----------------------------------------------------------------------------------------------------      \n       var triangleCoords = [new google.maps.LatLng(-37.81715,144.95654),new google.maps.LatLng(-37.81568,144.95894),new google.maps.LatLng(-37.81677,144.96117),new google.maps.LatLng(-37.81814,144.96018)];\n         \n      \n        \n        var farm = map.drawPolygon({\n               paths: triangleCoords,\n               draggable: true, // turn off if it gets annoying\n               editable: true,\n               strokeColor: '#FF0000',\n               strokeOpacity: 0.8,\n               strokeWeight: 2,\n               fillColor: '#FF0000',\n               fillOpacity: 0.35,\n            });\n            \n// Boundary ---------------------------------------------------------------------------------------------------  \n        \n        \n\n//listen from google map---------------------------------------------------------------------------------------\n        \n      \n      var htmlStr = \"\";\n      \n      function getPolygonCoords() {\n          \n        var len = farm.getPath().getLength();\n        \n        htmlStr = \"[\";\n        for (var i = 0; i < len; i++) {\n        \n         htmlStr += \"new google.maps.LatLng(\" + farm.getPath().getAt(i).toUrlValue(5) + \")\";\n         if(i<len-1)\n         {\n            htmlStr += \",\";\n         }\n        \n        }\n        htmlStr += \"]\"\n        \n        writetofile();\n        \n      }\n      \n        \n      function writetofile()\n      {\n        var farm_coordinates = htmlStr;\n        console.log (\"Coordinate of polygon\" + farm_coordinates);\n        sock.send(farm_coordinates);\n        console.log(\"Data sent..\");\n      }\n      \n      \n        \n//listen from google map-----------------------------------------------------------------------------------------\n        \n     \n     \n     var list = [];\n     var eventflag =false;\n     \n// Marker -------------------------------------------------------------------------------------------------------\n       sock.onmessage = function(evt){\n           \n        eventflag = true;\n        \n         var data = JSON.parse(evt.data);\n         //console.log(\"GPS DATA\" + data.GPSData);\n         \n         if(list.length != 0)\n         {\n            var i=0;\n            var flag = false;\n            \n              for (i; i< list.length;i++)\n              {\n               console.log (\"MAC address from the list:\" + list[i][0].IDTag);\n               if (data.IDTag == list[i][0].IDTag)\n               {\n                   list[i][0]= data;\n                   flag =true;\n                   break;\n               }\n              }\n              if (flag == false)\n              {\n                list.push([data]); \n              }\n          }\n         else\n         {\n             list.push([data]);\n         }\n \n       \n       if (eventflag == true)\n       {\n           map.removeMarkers();\n           map.removeOverlays();\n           \n           var i=0;\n           var latlng =[];\n           var status_box = document.getElementById('box');\n           var status_box_flag=false;\n           \n           for (i; i< list.length;i++)\n              {\n                 latlng[i] = list[i][0].GPSData;\n                 //map.addMarkers(latlng[i]);\n                 \n                 map.addMarker({\n                    \n                    lat:latlng[i].lat,\n                    lng:latlng[i].lng,\n                    infoWindow: {\n                        content: JSON.stringify(list[i][0])\n                    },\n                    mouseover: function() {\n                        this.infoWindow.open(this.map, this);\n                    },\n                    mouseout: function() {\n                        this.infoWindow.close();\n                    }\n                });\n                 \n                 \n                 if(map.checkGeofence(parseFloat(latlng[i].lat),parseFloat(latlng[i].lng),farm))\n                 {\n                \n                 }\n                 else\n                 {\n                \n                    status_box_flag = true;\n                    map.drawOverlay({\n                    lat: latlng[i].lat,\n                    lng: latlng[i].lng,\n                    content: '<div1 class=\"overlay\">Catch this cow !</div1>'});\n                    \n                }\n              }\n              \n              if (status_box_flag == true)\n              {\n                  status_box.style.backgroundColor = 'darkred';\n              }\n              else\n              {\n                  status_box.style.backgroundColor = 'darkgreen';\n              }\n              \n        \n          // 3. Add event handler\n       button2.addEventListener (\"click\", function() {\n              map.removeMarkers();\n              map.removeOverlays();\n          \n        }); \n        \n        \n\t }\n}\n\t  \n// Marker ---------------------------------------------------------------------------------------------\n        \n });\n  </script>\n</body>\n</html>","x":766,"y":699.0000610351562,"wires":[["adeb49e8.6c7b38"]]},{"id":"f1a022ef.25df3","type":"debug","z":"ed6be398.cbe5b","name":"","active":false,"console":"false","complete":"payload","x":770,"y":796,"wires":[]},{"id":"d4af1936.06f768","type":"json","z":"ed6be398.cbe5b","name":"","x":306.5,"y":217,"wires":[["4d90ed32.da8284","51c9aaf8.3996c4"]]},{"id":"16c2dad3.0da445","type":"function","z":"ed6be398.cbe5b","name":"simulate GPS sensor","func":"msg.payload = { \"timestamp\": \"2017-06-06T12:50:52.351Z\",\"macAddr\": \"000000000c500078\", \"lat\":\"-37.816950\",\"lng\":\"144.958762\",\"battery\":40};\nreturn msg;","outputs":1,"noerr":0,"x":513.5,"y":584,"wires":[["62f67c3f.e45894"]]},{"id":"2b50fe49.2ffa62","type":"comment","z":"ed6be398.cbe5b","name":"GPS tracking app","info":"This is basic GPS tracking app.\nIt has simulated GPS data, which publish the over mqtt protocol.\nApp also subscribes the GPS data and shows the location on google map.\n\nThis app uses AWS IoT platform and saves all the data into DynamoDB database (service provided by AWS).","x":469.5,"y":7,"wires":[]},{"id":"835c32af.1a1fa","type":"mqtt-broker","z":"","broker":"aji0sdigc04ue.iot.ap-southeast-2.amazonaws.com","port":"8883","tls":"b0f1a176.31a55","clientid":"","usetls":true,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"f4b42b0.6d1bfd8","type":"websocket-listener","path":"/ws/location","wholemsg":"false"},{"id":"b0f1a176.31a55","type":"tls-config","z":"","name":"AWS","cert":"/home/ubuntu/Certificate-AWS/f418c8ae76-certificate.pem.crt","key":"/home/ubuntu/Certificate-AWS/f418c8ae76-private.pem.key","ca":"/home/ubuntu/Certificate-AWS/rootCA.pem.txt","certname":"","keyname":"","caname":"","verifyservercert":true}]